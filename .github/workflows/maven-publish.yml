name: GitHub Actions Demo
on: [push]

env:
  image: simple-java-maven
  tag: 19-jdk-alpine
  java-version: '11'
  maven-version: '3.8.2'
jobs:
  Explore-GitHub-Actions:
    runs-on: self-hosted 
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v3
      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
      # - name: Docker Meta
      #   uses: docker/metadata-action@v4
      #   id: metadata
      #   with:
      #     images: bjrooney/simple-java-maven
      # -
      #   name: Login to DockerHub
      #   uses: docker/login-action@v2
      #   with:
      #     username: bjrooney
      #     password: dckr_pat_Z1UeAEZYdeBGkgVywwlAbUBXGGU
      - name: Setup Maven Action
        uses: s4u/setup-maven-action@v1.4.0
        with:
          java-version:  ${{ env.java-version }}
          maven-version: ${{ env.maven-version }}

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - 
        name: Docker build
        run:  docker build . -t ${{ env.image }}:${{ env.tag }}

      - name: Run Snyk to check Docker images for vulnerabilities
        continue-on-error: true
        uses: snyk/actions/docker@master
        env:
          SNYK_TOKEN: 9e9a8f5f-d452-4d56-9f7e-703becf8c205
        with:
          image:  ${{ env.image }}:${{ env.tag }}
          sarif: true
          args: --severity-threshold=high

      - name: Kaniko build
        uses: aevea/action-kaniko@master
        with:
          image: ${{ env.image }}
          tag:   ${{ env.tag }}
          registry: crezz.jfrog.io/default-docker
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_SECRET }}
          cache: true


      - name: List files in the repository
        run: |
          ls -lR ${{ github.workspace }}
      - run: echo "üçè This job's status is ${{ job.status }}."