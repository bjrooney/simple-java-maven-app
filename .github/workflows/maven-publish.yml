name: GitHub Actions Demo
on: [push]

env:
  image: simple-java-maven
  tag: openjdk-19-jdk-alpine3.15
  java-version: '11'
  maven-version: '3.8.6'
  distribution: 'temurin'
  
jobs:
  Snyk:
    runs-on: ubuntu-latest
    steps:
      - 
        name: Run Snyk to check for vulnerabilities
        uses: actions/checkout@v3
      -
        uses: snyk/actions/maven-3-jdk-11@master
        continue-on-error: true # 
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN}}
        with:
          args: --severity-threshold=low
  Explore-GitHub-Actions:
    runs-on: self-hosted 
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v3
      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."

      -
        name: Login to Artifactory
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_SECRET }}
          registry: ${{ secrets.ARTIFACTORY_DOCKER_REPO }}
      - 
        name: Setup Maven Action - 
        uses: s4u/setup-maven-action@v1.4.0
        with:
          java-version:  ${{ env.java-version }}
          maven-version: ${{ env.maven-version }}
          java-distribution:  ${{ env.distribution}}
      - 
        name: Build with Maven
        run: mvn -B package --file pom.xml
      - 
        name: Docker build locally for Snyk Scan
        run:  docker build . -t ${{ env.image }}:${{ env.tag }}
      - 
        name: Docker Meta
        uses: docker/metadata-action@v4
        id: metadata
        with:
          images: ${{ env.image }}:${{ env.tag }}
      - 
        name: Run Snyk to check Docker images for vulnerabilities
        continue-on-error: true
        uses: snyk/actions/docker@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN}}
        with:
          image:  ${{ env.image }}:${{ env.tag }}
          args: --file=Dockerfile
      # - 
      #   name: Kaniko build to Artifactory
      #   uses: ./.github/actions/kaniko
      #   with:
      #     image: ${{ env.image }}
      #     tag:   ${{ env.tag }}
      #     username: 'bjrooney'
      #     password: ${{ secrets.DOCKERIO_PASSWORD }}
      #     cache: true
      #     cache_registry: aevea/cache

      - 
        name: List files in the repository
        run: |
          ls -lR ${{ github.workspace }}
      - run: echo "üçè This job's status is ${{ job.status }}."
  helm-suite:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Helm Artifactory check
      uses: mbovo/action-helm-artifactory@main
      with:
        action: check_push
      env:
        CHART_DIR: ./example-helm-chart
        ARTIFACTORY_URL:      https://crezz.jfrog.io/artifactory/default-helm-local/
        ARTIFACTORY_USERNAME: ${{ secrets.HELM_USERNAME }}
        ARTIFACTORY_PASSWORD: ${{ secrets.HELM_SECRET }}
        ACTION: check_push
  docker:

    runs-on: ubuntu-latest
    steps:
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERIO_PASSWORD}}
      -
        name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.image }}:${{ env.tag }}
  